basePath: /api/v1
definitions:
  BadRequest:
    properties:
      code:
        description: 错误码
        format: int32
        type: integer
      msg:
        description: 错误信息
        type: string
    type: object
  auth.Secret:
    properties:
      createtime:
        type: integer
      id:
        type: string
      secret_key:
        type: string
      status:
        type: integer
      type:
        $ref: '#/definitions/secret_entity.SecretType'
      updatetime:
        type: integer
    type: object
  auth.SecretCreateRequest:
    type: object
  auth.SecretCreateResponse:
    properties:
      secret:
        $ref: '#/definitions/auth.Secret'
    type: object
  auth.SecretDeleteRequest:
    type: object
  auth.SecretDeleteResponse:
    type: object
  auth.SecretGetResponse:
    properties:
      secret:
        $ref: '#/definitions/auth.Secret'
    type: object
  auth.SecretListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/auth.Secret'
        type: array
    type: object
  auth.SecretUpdateRequest:
    properties:
      secret:
        $ref: '#/definitions/auth.Secret'
    type: object
  auth.SecretUpdateResponse:
    properties:
      secret:
        $ref: '#/definitions/auth.Secret'
    type: object
  cookie_entity.HttpCookie:
    properties:
      domain:
        description: optional
        type: string
      expires:
        $ref: '#/definitions/time.Time'
        description: optional
      http_only:
        type: boolean
      max_age:
        description: |-
          =0 means no 'Max-Age' attribute specified.
          MaxAge<0 means delete cookie now, equivalently 'Max-Age: 0'
          MaxAge>0 means Max-Age attribute present and given in seconds
        type: integer
      name:
        type: string
      path:
        description: optional
        type: string
      raw:
        type: string
      raw_expires:
        description: for reading cookies only
        type: string
      same_site:
        type: integer
      secure:
        type: boolean
      unparsed:
        description: Raw text of unparsed attribute-value pairs
        items:
          type: string
        type: array
      value:
        type: string
    type: object
  script_entity.Metadata:
    additionalProperties:
      items:
        type: string
      type: array
    type: object
  script_entity.ScriptState:
    description: |-
      ScriptState enum type:
      - ScriptStateEnable: enable
      - ScriptStateDisable: disable
      - RuntimeScriptCat: scriptcat
    enum:
    - enable
    - disable
    - scriptcat
    type: string
  script_entity.Status:
    additionalProperties:
      type: string
    type: object
  scripts.Cookie:
    properties:
      cookies:
        items:
          $ref: '#/definitions/cookie_entity.HttpCookie'
        type: array
      createtime:
        type: integer
      storage_name:
        type: string
      url:
        type: string
    type: object
  scripts.CookieListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/scripts.Cookie'
        type: array
    type: object
  scripts.DeleteRequest:
    properties:
      scriptId:
        type: string
    type: object
  scripts.DeleteResponse:
    type: object
  scripts.GetResponse:
    properties:
      script:
        $ref: '#/definitions/scripts.Script'
    type: object
  scripts.InstallRequest:
    properties:
      code:
        type: string
    type: object
  scripts.InstallResponse:
    properties:
      scripts:
        items:
          $ref: '#/definitions/scripts.Script'
        type: array
    type: object
  scripts.ListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/scripts.Script'
        type: array
    type: object
  scripts.Script:
    properties:
      code,omitempty:
        type: string
      createtime:
        type: integer
      id:
        type: string
      metadata:
        $ref: '#/definitions/script_entity.Metadata'
      name:
        type: string
      self_metadata:
        $ref: '#/definitions/script_entity.Metadata'
      state:
        $ref: '#/definitions/script_entity.ScriptState'
      status:
        $ref: '#/definitions/script_entity.Status'
      updatetime:
        type: integer
    type: object
  scripts.Storage:
    properties:
      link_script_id:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
  scripts.StorageListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/scripts.Storage'
        type: array
    type: object
  scripts.UpdateRequest:
    properties:
      script:
        $ref: '#/definitions/scripts.Script'
      scriptId:
        type: string
    type: object
  scripts.UpdateResponse:
    type: object
  scripts.Value:
    properties:
      createtime:
        type: integer
      key:
        type: string
      storage_name:
        type: string
      value:
        type: string
    type: object
  scripts.ValueListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/scripts.Value'
        type: array
    type: object
  secret_entity.SecretType:
    description: |-
      SecretType enum type:
      - AesCbc: aes-cbc
    enum:
    - aes-cbc
    type: string
  time.Time:
    type: string
info:
  title: 云猫 API 文档
  version: 1.0.0
paths:
  /cookies/{storageName}:
    get:
      consumes:
      - application/json
      description: 脚本cookie列表
      parameters:
      - in: path
        name: storageName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.CookieListResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 脚本cookie列表
      tags:
      - scripts
  /scripts:
    get:
      consumes:
      - application/json
      description: 脚本列表
      parameters:
      - in: query
        name: scriptId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.ListResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 脚本列表
      tags:
      - scripts
    post:
      consumes:
      - application/json
      description: 创建脚本
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/scripts.InstallRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.InstallResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 创建脚本
      tags:
      - scripts
  /scripts/{scriptId}:
    delete:
      consumes:
      - application/json
      description: 删除脚本
      parameters:
      - in: path
        name: scriptId
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/scripts.DeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.DeleteResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 删除脚本
      tags:
      - scripts
    get:
      consumes:
      - application/json
      description: 获取脚本
      parameters:
      - in: path
        name: scriptId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.GetResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 获取脚本
      tags:
      - scripts
    put:
      consumes:
      - application/json
      description: 更新脚本
      parameters:
      - in: path
        name: scriptId
        required: true
        type: string
      - in: body
        name: body
        schema:
          $ref: '#/definitions/scripts.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.UpdateResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 更新脚本
      tags:
      - scripts
  /secrets:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/auth.SecretListResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      tags:
      - auth
    post:
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/auth.SecretCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/auth.SecretCreateResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      tags:
      - auth
  /secrets/:secretId:
    delete:
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/auth.SecretDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/auth.SecretDeleteResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      tags:
      - auth
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/auth.SecretGetResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      tags:
      - auth
    put:
      consumes:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/auth.SecretUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/auth.SecretUpdateResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      tags:
      - auth
  /storages:
    get:
      consumes:
      - application/json
      description: 值储存空间列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.StorageListResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 值储存空间列表
      tags:
      - scripts
  /values/{storageName}:
    get:
      consumes:
      - application/json
      description: 脚本值列表
      parameters:
      - in: path
        name: storageName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              code:
                type: integer
              data:
                $ref: '#/definitions/scripts.ValueListResponse'
              msg:
                type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
      summary: 脚本值列表
      tags:
      - scripts
swagger: "2.0"
